[{"name":"AB_NEGATIVE","description":"entity.PatientData.BloodGroup.AB_NEGATIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-a-b_-n-e-g-a-t-i-v-e/index.html","searchKeys":["AB_NEGATIVE","AB_NEGATIVE","entity.PatientData.BloodGroup.AB_NEGATIVE"]},{"name":"AB_POSITIVE","description":"entity.PatientData.BloodGroup.AB_POSITIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-a-b_-p-o-s-i-t-i-v-e/index.html","searchKeys":["AB_POSITIVE","AB_POSITIVE","entity.PatientData.BloodGroup.AB_POSITIVE"]},{"name":"A_NEGATIVE","description":"entity.PatientData.BloodGroup.A_NEGATIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-a_-n-e-g-a-t-i-v-e/index.html","searchKeys":["A_NEGATIVE","A_NEGATIVE","entity.PatientData.BloodGroup.A_NEGATIVE"]},{"name":"A_POSITIVE","description":"entity.PatientData.BloodGroup.A_POSITIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-a_-p-o-s-i-t-i-v-e/index.html","searchKeys":["A_POSITIVE","A_POSITIVE","entity.PatientData.BloodGroup.A_POSITIVE"]},{"name":"B_NEGATIVE","description":"entity.PatientData.BloodGroup.B_NEGATIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-b_-n-e-g-a-t-i-v-e/index.html","searchKeys":["B_NEGATIVE","B_NEGATIVE","entity.PatientData.BloodGroup.B_NEGATIVE"]},{"name":"B_POSITIVE","description":"entity.PatientData.BloodGroup.B_POSITIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-b_-p-o-s-i-t-i-v-e/index.html","searchKeys":["B_POSITIVE","B_POSITIVE","entity.PatientData.BloodGroup.B_POSITIVE"]},{"name":"CENTIMETER","description":"entity.PatientData.LengthUnit.CENTIMETER","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/-c-e-n-t-i-m-e-t-e-r/index.html","searchKeys":["CENTIMETER","CENTIMETER","entity.PatientData.LengthUnit.CENTIMETER"]},{"name":"FEMALE","description":"entity.PatientData.Gender.FEMALE","location":"patient-management-integration-microservice/entity/-patient-data/-gender/-f-e-m-a-l-e/index.html","searchKeys":["FEMALE","FEMALE","entity.PatientData.Gender.FEMALE"]},{"name":"GRAM","description":"entity.PatientData.MassUnit.GRAM","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/-g-r-a-m/index.html","searchKeys":["GRAM","GRAM","entity.PatientData.MassUnit.GRAM"]},{"name":"KILOGRAM","description":"entity.PatientData.MassUnit.KILOGRAM","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/-k-i-l-o-g-r-a-m/index.html","searchKeys":["KILOGRAM","KILOGRAM","entity.PatientData.MassUnit.KILOGRAM"]},{"name":"MALE","description":"entity.PatientData.Gender.MALE","location":"patient-management-integration-microservice/entity/-patient-data/-gender/-m-a-l-e/index.html","searchKeys":["MALE","MALE","entity.PatientData.Gender.MALE"]},{"name":"METER","description":"entity.PatientData.LengthUnit.METER","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/-m-e-t-e-r/index.html","searchKeys":["METER","METER","entity.PatientData.LengthUnit.METER"]},{"name":"ZERO_NEGATIVE","description":"entity.PatientData.BloodGroup.ZERO_NEGATIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-z-e-r-o_-n-e-g-a-t-i-v-e/index.html","searchKeys":["ZERO_NEGATIVE","ZERO_NEGATIVE","entity.PatientData.BloodGroup.ZERO_NEGATIVE"]},{"name":"ZERO_POSITIVE","description":"entity.PatientData.BloodGroup.ZERO_POSITIVE","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/-z-e-r-o_-p-o-s-i-t-i-v-e/index.html","searchKeys":["ZERO_POSITIVE","ZERO_POSITIVE","entity.PatientData.BloodGroup.ZERO_POSITIVE"]},{"name":"abstract fun createPatient(patient: Patient): Boolean","description":"usecase.repository.PatientRepository.createPatient","location":"patient-management-integration-microservice/usecase.repository/-patient-repository/create-patient.html","searchKeys":["createPatient","abstract fun createPatient(patient: Patient): Boolean","usecase.repository.PatientRepository.createPatient"]},{"name":"abstract fun deletePatient(taxCode: PatientData.TaxCode): Boolean","description":"application.controller.manager.PatientDatabaseManager.deletePatient","location":"patient-management-integration-microservice/application.controller.manager/-patient-database-manager/delete-patient.html","searchKeys":["deletePatient","abstract fun deletePatient(taxCode: PatientData.TaxCode): Boolean","application.controller.manager.PatientDatabaseManager.deletePatient"]},{"name":"abstract fun deletePatient(taxCode: PatientData.TaxCode): Boolean","description":"usecase.repository.PatientRepository.deletePatient","location":"patient-management-integration-microservice/usecase.repository/-patient-repository/delete-patient.html","searchKeys":["deletePatient","abstract fun deletePatient(taxCode: PatientData.TaxCode): Boolean","usecase.repository.PatientRepository.deletePatient"]},{"name":"abstract fun execute(): E","description":"application.service.ApplicationService.execute","location":"patient-management-integration-microservice/application.service/-application-service/execute.html","searchKeys":["execute","abstract fun execute(): E","application.service.ApplicationService.execute"]},{"name":"abstract fun getPatient(taxCode: PatientData.TaxCode): Patient?","description":"application.controller.manager.PatientDatabaseManager.getPatient","location":"patient-management-integration-microservice/application.controller.manager/-patient-database-manager/get-patient.html","searchKeys":["getPatient","abstract fun getPatient(taxCode: PatientData.TaxCode): Patient?","application.controller.manager.PatientDatabaseManager.getPatient"]},{"name":"abstract fun getPatient(taxCode: PatientData.TaxCode): Patient?","description":"usecase.repository.PatientRepository.getPatient","location":"patient-management-integration-microservice/usecase.repository/-patient-repository/get-patient.html","searchKeys":["getPatient","abstract fun getPatient(taxCode: PatientData.TaxCode): Patient?","usecase.repository.PatientRepository.getPatient"]},{"name":"abstract fun insertPatient(patient: Patient): Boolean","description":"application.controller.manager.PatientDatabaseManager.insertPatient","location":"patient-management-integration-microservice/application.controller.manager/-patient-database-manager/insert-patient.html","searchKeys":["insertPatient","abstract fun insertPatient(patient: Patient): Boolean","application.controller.manager.PatientDatabaseManager.insertPatient"]},{"name":"abstract val patientDatabaseManager: PatientDatabaseManager","description":"infrastructure.provider.Provider.patientDatabaseManager","location":"patient-management-integration-microservice/infrastructure.provider/-provider/patient-database-manager.html","searchKeys":["patientDatabaseManager","abstract val patientDatabaseManager: PatientDatabaseManager","infrastructure.provider.Provider.patientDatabaseManager"]},{"name":"class ApiRouter(patientDatabaseManager: PatientDatabaseManager)","description":"infrastructure.api.ApiRouter","location":"patient-management-integration-microservice/infrastructure.api/-api-router/index.html","searchKeys":["ApiRouter","class ApiRouter(patientDatabaseManager: PatientDatabaseManager)","infrastructure.api.ApiRouter"]},{"name":"class CreatePatient(patient: Patient, patientRepository: PatientRepository) : ApplicationService<Boolean> ","description":"application.service.PatientServices.CreatePatient","location":"patient-management-integration-microservice/application.service/-patient-services/-create-patient/index.html","searchKeys":["CreatePatient","class CreatePatient(patient: Patient, patientRepository: PatientRepository) : ApplicationService<Boolean> ","application.service.PatientServices.CreatePatient"]},{"name":"class DeletePatient(taxCode: PatientData.TaxCode, patientRepository: PatientRepository) : ApplicationService<Boolean> ","description":"application.service.PatientServices.DeletePatient","location":"patient-management-integration-microservice/application.service/-patient-services/-delete-patient/index.html","searchKeys":["DeletePatient","class DeletePatient(taxCode: PatientData.TaxCode, patientRepository: PatientRepository) : ApplicationService<Boolean> ","application.service.PatientServices.DeletePatient"]},{"name":"class GetPatient(taxCode: PatientData.TaxCode, patientRepository: PatientRepository) : ApplicationService<Patient?> ","description":"application.service.PatientServices.GetPatient","location":"patient-management-integration-microservice/application.service/-patient-services/-get-patient/index.html","searchKeys":["GetPatient","class GetPatient(taxCode: PatientData.TaxCode, patientRepository: PatientRepository) : ApplicationService<Patient?> ","application.service.PatientServices.GetPatient"]},{"name":"class MongoClient(connectionString: String) : PatientDatabaseManager","description":"infrastructure.database.MongoClient","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/index.html","searchKeys":["MongoClient","class MongoClient(connectionString: String) : PatientDatabaseManager","infrastructure.database.MongoClient"]},{"name":"class PatientController(dbManager: PatientDatabaseManager) : PatientRepository","description":"application.controller.PatientController","location":"patient-management-integration-microservice/application.controller/-patient-controller/index.html","searchKeys":["PatientController","class PatientController(dbManager: PatientDatabaseManager) : PatientRepository","application.controller.PatientController"]},{"name":"class ProviderImpl : Provider","description":"infrastructure.provider.ProviderImpl","location":"patient-management-integration-microservice/infrastructure.provider/-provider-impl/index.html","searchKeys":["ProviderImpl","class ProviderImpl : Provider","infrastructure.provider.ProviderImpl"]},{"name":"const val NETTY_PORT: Int = 3000","description":"infrastructure.api.ApiRouter.Companion.NETTY_PORT","location":"patient-management-integration-microservice/infrastructure.api/-api-router/-companion/-n-e-t-t-y_-p-o-r-t.html","searchKeys":["NETTY_PORT","const val NETTY_PORT: Int = 3000","infrastructure.api.ApiRouter.Companion.NETTY_PORT"]},{"name":"const val databaseName: String","description":"infrastructure.database.MongoClient.Companion.databaseName","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/-companion/database-name.html","searchKeys":["databaseName","const val databaseName: String","infrastructure.database.MongoClient.Companion.databaseName"]},{"name":"constructor()","description":"infrastructure.provider.ProviderImpl.ProviderImpl","location":"patient-management-integration-microservice/infrastructure.provider/-provider-impl/-provider-impl.html","searchKeys":["ProviderImpl","constructor()","infrastructure.provider.ProviderImpl.ProviderImpl"]},{"name":"constructor(code: String)","description":"entity.PatientData.TaxCode.TaxCode","location":"patient-management-integration-microservice/entity/-patient-data/-tax-code/-tax-code.html","searchKeys":["TaxCode","constructor(code: String)","entity.PatientData.TaxCode.TaxCode"]},{"name":"constructor(connectionString: String)","description":"infrastructure.database.MongoClient.MongoClient","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/-mongo-client.html","searchKeys":["MongoClient","constructor(connectionString: String)","infrastructure.database.MongoClient.MongoClient"]},{"name":"constructor(dbManager: PatientDatabaseManager)","description":"application.controller.PatientController.PatientController","location":"patient-management-integration-microservice/application.controller/-patient-controller/-patient-controller.html","searchKeys":["PatientController","constructor(dbManager: PatientDatabaseManager)","application.controller.PatientController.PatientController"]},{"name":"constructor(patient: Patient, patientRepository: PatientRepository)","description":"application.service.PatientServices.CreatePatient.CreatePatient","location":"patient-management-integration-microservice/application.service/-patient-services/-create-patient/-create-patient.html","searchKeys":["CreatePatient","constructor(patient: Patient, patientRepository: PatientRepository)","application.service.PatientServices.CreatePatient.CreatePatient"]},{"name":"constructor(patientDatabaseManager: PatientDatabaseManager)","description":"infrastructure.api.ApiRouter.ApiRouter","location":"patient-management-integration-microservice/infrastructure.api/-api-router/-api-router.html","searchKeys":["ApiRouter","constructor(patientDatabaseManager: PatientDatabaseManager)","infrastructure.api.ApiRouter.ApiRouter"]},{"name":"constructor(taxCode: PatientData.TaxCode, name: String, surname: String, birthdate: String, height: PatientData.Height, weight: PatientData.Weight, bloodGroup: PatientData.BloodGroup)","description":"entity.Patient.Patient","location":"patient-management-integration-microservice/entity/-patient/-patient.html","searchKeys":["Patient","constructor(taxCode: PatientData.TaxCode, name: String, surname: String, birthdate: String, height: PatientData.Height, weight: PatientData.Weight, bloodGroup: PatientData.BloodGroup)","entity.Patient.Patient"]},{"name":"constructor(taxCode: PatientData.TaxCode, patientRepository: PatientRepository)","description":"application.service.PatientServices.DeletePatient.DeletePatient","location":"patient-management-integration-microservice/application.service/-patient-services/-delete-patient/-delete-patient.html","searchKeys":["DeletePatient","constructor(taxCode: PatientData.TaxCode, patientRepository: PatientRepository)","application.service.PatientServices.DeletePatient.DeletePatient"]},{"name":"constructor(taxCode: PatientData.TaxCode, patientRepository: PatientRepository)","description":"application.service.PatientServices.GetPatient.GetPatient","location":"patient-management-integration-microservice/application.service/-patient-services/-get-patient/-get-patient.html","searchKeys":["GetPatient","constructor(taxCode: PatientData.TaxCode, patientRepository: PatientRepository)","application.service.PatientServices.GetPatient.GetPatient"]},{"name":"constructor(taxCode: String, name: String, surname: String, height: Double, weight: Double, birthdate: String, bloodGroup: PatientData.BloodGroup)","description":"application.presenter.api.model.PatientApiDto.PatientApiDto","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/-patient-api-dto.html","searchKeys":["PatientApiDto","constructor(taxCode: String, name: String, surname: String, height: Double, weight: Double, birthdate: String, bloodGroup: PatientData.BloodGroup)","application.presenter.api.model.PatientApiDto.PatientApiDto"]},{"name":"constructor(value: Double, unit: PatientData.LengthUnit)","description":"entity.PatientData.Height.Height","location":"patient-management-integration-microservice/entity/-patient-data/-height/-height.html","searchKeys":["Height","constructor(value: Double, unit: PatientData.LengthUnit)","entity.PatientData.Height.Height"]},{"name":"constructor(value: Double, unit: PatientData.MassUnit)","description":"entity.PatientData.Weight.Weight","location":"patient-management-integration-microservice/entity/-patient-data/-weight/-weight.html","searchKeys":["Weight","constructor(value: Double, unit: PatientData.MassUnit)","entity.PatientData.Weight.Weight"]},{"name":"data class Height(val value: Double, val unit: PatientData.LengthUnit)","description":"entity.PatientData.Height","location":"patient-management-integration-microservice/entity/-patient-data/-height/index.html","searchKeys":["Height","data class Height(val value: Double, val unit: PatientData.LengthUnit)","entity.PatientData.Height"]},{"name":"data class Patient(val taxCode: PatientData.TaxCode, val name: String, val surname: String, val birthdate: String, val height: PatientData.Height, val weight: PatientData.Weight, val bloodGroup: PatientData.BloodGroup)","description":"entity.Patient","location":"patient-management-integration-microservice/entity/-patient/index.html","searchKeys":["Patient","data class Patient(val taxCode: PatientData.TaxCode, val name: String, val surname: String, val birthdate: String, val height: PatientData.Height, val weight: PatientData.Weight, val bloodGroup: PatientData.BloodGroup)","entity.Patient"]},{"name":"data class PatientApiDto(val taxCode: String, val name: String, val surname: String, val height: Double, val weight: Double, val birthdate: String, val bloodGroup: PatientData.BloodGroup)","description":"application.presenter.api.model.PatientApiDto","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/index.html","searchKeys":["PatientApiDto","data class PatientApiDto(val taxCode: String, val name: String, val surname: String, val height: Double, val weight: Double, val birthdate: String, val bloodGroup: PatientData.BloodGroup)","application.presenter.api.model.PatientApiDto"]},{"name":"data class TaxCode(val code: String)","description":"entity.PatientData.TaxCode","location":"patient-management-integration-microservice/entity/-patient-data/-tax-code/index.html","searchKeys":["TaxCode","data class TaxCode(val code: String)","entity.PatientData.TaxCode"]},{"name":"data class Weight(val value: Double, val unit: PatientData.MassUnit)","description":"entity.PatientData.Weight","location":"patient-management-integration-microservice/entity/-patient-data/-weight/index.html","searchKeys":["Weight","data class Weight(val value: Double, val unit: PatientData.MassUnit)","entity.PatientData.Weight"]},{"name":"enum BloodGroup : Enum<PatientData.BloodGroup> ","description":"entity.PatientData.BloodGroup","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/index.html","searchKeys":["BloodGroup","enum BloodGroup : Enum<PatientData.BloodGroup> ","entity.PatientData.BloodGroup"]},{"name":"enum Gender : Enum<PatientData.Gender> ","description":"entity.PatientData.Gender","location":"patient-management-integration-microservice/entity/-patient-data/-gender/index.html","searchKeys":["Gender","enum Gender : Enum<PatientData.Gender> ","entity.PatientData.Gender"]},{"name":"enum LengthUnit : Enum<PatientData.LengthUnit> ","description":"entity.PatientData.LengthUnit","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/index.html","searchKeys":["LengthUnit","enum LengthUnit : Enum<PatientData.LengthUnit> ","entity.PatientData.LengthUnit"]},{"name":"enum MassUnit : Enum<PatientData.MassUnit> ","description":"entity.PatientData.MassUnit","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/index.html","searchKeys":["MassUnit","enum MassUnit : Enum<PatientData.MassUnit> ","entity.PatientData.MassUnit"]},{"name":"fun Patient.toPatientApiDto(): PatientApiDto","description":"application.presenter.api.model.toPatientApiDto","location":"patient-management-integration-microservice/application.presenter.api.model/to-patient-api-dto.html","searchKeys":["toPatientApiDto","fun Patient.toPatientApiDto(): PatientApiDto","application.presenter.api.model.toPatientApiDto"]},{"name":"fun PatientApiDto.toPatient(): Patient","description":"application.presenter.api.model.toPatient","location":"patient-management-integration-microservice/application.presenter.api.model/to-patient.html","searchKeys":["toPatient","fun PatientApiDto.toPatient(): Patient","application.presenter.api.model.toPatient"]},{"name":"fun Route.patientAPI(patientDatabaseManager: PatientDatabaseManager)","description":"infrastructure.api.routes.patientAPI","location":"patient-management-integration-microservice/infrastructure.api.routes/patient-a-p-i.html","searchKeys":["patientAPI","fun Route.patientAPI(patientDatabaseManager: PatientDatabaseManager)","infrastructure.api.routes.patientAPI"]},{"name":"fun getDatabase(databaseName: String): MongoDatabase","description":"infrastructure.database.MongoClient.getDatabase","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/get-database.html","searchKeys":["getDatabase","fun getDatabase(databaseName: String): MongoDatabase","infrastructure.database.MongoClient.getDatabase"]},{"name":"fun interface ApplicationService<out E>","description":"application.service.ApplicationService","location":"patient-management-integration-microservice/application.service/-application-service/index.html","searchKeys":["ApplicationService","fun interface ApplicationService<out E>","application.service.ApplicationService"]},{"name":"fun main()","description":"main","location":"patient-management-integration-microservice/[root]/main.html","searchKeys":["main","fun main()","main"]},{"name":"fun module(app: Application)","description":"infrastructure.api.ApiRouter.module","location":"patient-management-integration-microservice/infrastructure.api/-api-router/module.html","searchKeys":["module","fun module(app: Application)","infrastructure.api.ApiRouter.module"]},{"name":"fun start()","description":"infrastructure.api.ApiRouter.start","location":"patient-management-integration-microservice/infrastructure.api/-api-router/start.html","searchKeys":["start","fun start()","infrastructure.api.ApiRouter.start"]},{"name":"fun valueOf(value: String): PatientData.BloodGroup","description":"entity.PatientData.BloodGroup.valueOf","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PatientData.BloodGroup","entity.PatientData.BloodGroup.valueOf"]},{"name":"fun valueOf(value: String): PatientData.Gender","description":"entity.PatientData.Gender.valueOf","location":"patient-management-integration-microservice/entity/-patient-data/-gender/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PatientData.Gender","entity.PatientData.Gender.valueOf"]},{"name":"fun valueOf(value: String): PatientData.LengthUnit","description":"entity.PatientData.LengthUnit.valueOf","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PatientData.LengthUnit","entity.PatientData.LengthUnit.valueOf"]},{"name":"fun valueOf(value: String): PatientData.MassUnit","description":"entity.PatientData.MassUnit.valueOf","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PatientData.MassUnit","entity.PatientData.MassUnit.valueOf"]},{"name":"fun values(): Array<PatientData.BloodGroup>","description":"entity.PatientData.BloodGroup.values","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/values.html","searchKeys":["values","fun values(): Array<PatientData.BloodGroup>","entity.PatientData.BloodGroup.values"]},{"name":"fun values(): Array<PatientData.Gender>","description":"entity.PatientData.Gender.values","location":"patient-management-integration-microservice/entity/-patient-data/-gender/values.html","searchKeys":["values","fun values(): Array<PatientData.Gender>","entity.PatientData.Gender.values"]},{"name":"fun values(): Array<PatientData.LengthUnit>","description":"entity.PatientData.LengthUnit.values","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/values.html","searchKeys":["values","fun values(): Array<PatientData.LengthUnit>","entity.PatientData.LengthUnit.values"]},{"name":"fun values(): Array<PatientData.MassUnit>","description":"entity.PatientData.MassUnit.values","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/values.html","searchKeys":["values","fun values(): Array<PatientData.MassUnit>","entity.PatientData.MassUnit.values"]},{"name":"interface PatientDatabaseManager","description":"application.controller.manager.PatientDatabaseManager","location":"patient-management-integration-microservice/application.controller.manager/-patient-database-manager/index.html","searchKeys":["PatientDatabaseManager","interface PatientDatabaseManager","application.controller.manager.PatientDatabaseManager"]},{"name":"interface PatientRepository","description":"usecase.repository.PatientRepository","location":"patient-management-integration-microservice/usecase.repository/-patient-repository/index.html","searchKeys":["PatientRepository","interface PatientRepository","usecase.repository.PatientRepository"]},{"name":"interface Provider","description":"infrastructure.provider.Provider","location":"patient-management-integration-microservice/infrastructure.provider/-provider/index.html","searchKeys":["Provider","interface Provider","infrastructure.provider.Provider"]},{"name":"object Companion","description":"infrastructure.api.ApiRouter.Companion","location":"patient-management-integration-microservice/infrastructure.api/-api-router/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.api.ApiRouter.Companion"]},{"name":"object Companion","description":"infrastructure.database.MongoClient.Companion","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.database.MongoClient.Companion"]},{"name":"object PatientData","description":"entity.PatientData","location":"patient-management-integration-microservice/entity/-patient-data/index.html","searchKeys":["PatientData","object PatientData","entity.PatientData"]},{"name":"object PatientServices","description":"application.service.PatientServices","location":"patient-management-integration-microservice/application.service/-patient-services/index.html","searchKeys":["PatientServices","object PatientServices","application.service.PatientServices"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.Patient.equals","location":"patient-management-integration-microservice/entity/-patient/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.Patient.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.PatientData.TaxCode.equals","location":"patient-management-integration-microservice/entity/-patient-data/-tax-code/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.PatientData.TaxCode.equals"]},{"name":"open override fun createPatient(patient: Patient): Boolean","description":"application.controller.PatientController.createPatient","location":"patient-management-integration-microservice/application.controller/-patient-controller/create-patient.html","searchKeys":["createPatient","open override fun createPatient(patient: Patient): Boolean","application.controller.PatientController.createPatient"]},{"name":"open override fun deletePatient(taxCode: PatientData.TaxCode): Boolean","description":"application.controller.PatientController.deletePatient","location":"patient-management-integration-microservice/application.controller/-patient-controller/delete-patient.html","searchKeys":["deletePatient","open override fun deletePatient(taxCode: PatientData.TaxCode): Boolean","application.controller.PatientController.deletePatient"]},{"name":"open override fun deletePatient(taxCode: PatientData.TaxCode): Boolean","description":"infrastructure.database.MongoClient.deletePatient","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/delete-patient.html","searchKeys":["deletePatient","open override fun deletePatient(taxCode: PatientData.TaxCode): Boolean","infrastructure.database.MongoClient.deletePatient"]},{"name":"open override fun execute(): Boolean","description":"application.service.PatientServices.CreatePatient.execute","location":"patient-management-integration-microservice/application.service/-patient-services/-create-patient/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.PatientServices.CreatePatient.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.PatientServices.DeletePatient.execute","location":"patient-management-integration-microservice/application.service/-patient-services/-delete-patient/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.PatientServices.DeletePatient.execute"]},{"name":"open override fun execute(): Patient?","description":"application.service.PatientServices.GetPatient.execute","location":"patient-management-integration-microservice/application.service/-patient-services/-get-patient/execute.html","searchKeys":["execute","open override fun execute(): Patient?","application.service.PatientServices.GetPatient.execute"]},{"name":"open override fun getPatient(taxCode: PatientData.TaxCode): Patient?","description":"application.controller.PatientController.getPatient","location":"patient-management-integration-microservice/application.controller/-patient-controller/get-patient.html","searchKeys":["getPatient","open override fun getPatient(taxCode: PatientData.TaxCode): Patient?","application.controller.PatientController.getPatient"]},{"name":"open override fun getPatient(taxCode: PatientData.TaxCode): Patient?","description":"infrastructure.database.MongoClient.getPatient","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/get-patient.html","searchKeys":["getPatient","open override fun getPatient(taxCode: PatientData.TaxCode): Patient?","infrastructure.database.MongoClient.getPatient"]},{"name":"open override fun hashCode(): Int","description":"entity.Patient.hashCode","location":"patient-management-integration-microservice/entity/-patient/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.Patient.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.PatientData.TaxCode.hashCode","location":"patient-management-integration-microservice/entity/-patient-data/-tax-code/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.PatientData.TaxCode.hashCode"]},{"name":"open override fun insertPatient(patient: Patient): Boolean","description":"infrastructure.database.MongoClient.insertPatient","location":"patient-management-integration-microservice/infrastructure.database/-mongo-client/insert-patient.html","searchKeys":["insertPatient","open override fun insertPatient(patient: Patient): Boolean","infrastructure.database.MongoClient.insertPatient"]},{"name":"open override val patientDatabaseManager: PatientDatabaseManager","description":"infrastructure.provider.ProviderImpl.patientDatabaseManager","location":"patient-management-integration-microservice/infrastructure.provider/-provider-impl/patient-database-manager.html","searchKeys":["patientDatabaseManager","open override val patientDatabaseManager: PatientDatabaseManager","infrastructure.provider.ProviderImpl.patientDatabaseManager"]},{"name":"val birthdate: String","description":"application.presenter.api.model.PatientApiDto.birthdate","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/birthdate.html","searchKeys":["birthdate","val birthdate: String","application.presenter.api.model.PatientApiDto.birthdate"]},{"name":"val birthdate: String","description":"entity.Patient.birthdate","location":"patient-management-integration-microservice/entity/-patient/birthdate.html","searchKeys":["birthdate","val birthdate: String","entity.Patient.birthdate"]},{"name":"val bloodGroup: PatientData.BloodGroup","description":"application.presenter.api.model.PatientApiDto.bloodGroup","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/blood-group.html","searchKeys":["bloodGroup","val bloodGroup: PatientData.BloodGroup","application.presenter.api.model.PatientApiDto.bloodGroup"]},{"name":"val bloodGroup: PatientData.BloodGroup","description":"entity.Patient.bloodGroup","location":"patient-management-integration-microservice/entity/-patient/blood-group.html","searchKeys":["bloodGroup","val bloodGroup: PatientData.BloodGroup","entity.Patient.bloodGroup"]},{"name":"val code: String","description":"entity.PatientData.TaxCode.code","location":"patient-management-integration-microservice/entity/-patient-data/-tax-code/code.html","searchKeys":["code","val code: String","entity.PatientData.TaxCode.code"]},{"name":"val entries: EnumEntries<PatientData.BloodGroup>","description":"entity.PatientData.BloodGroup.entries","location":"patient-management-integration-microservice/entity/-patient-data/-blood-group/entries.html","searchKeys":["entries","val entries: EnumEntries<PatientData.BloodGroup>","entity.PatientData.BloodGroup.entries"]},{"name":"val entries: EnumEntries<PatientData.Gender>","description":"entity.PatientData.Gender.entries","location":"patient-management-integration-microservice/entity/-patient-data/-gender/entries.html","searchKeys":["entries","val entries: EnumEntries<PatientData.Gender>","entity.PatientData.Gender.entries"]},{"name":"val entries: EnumEntries<PatientData.LengthUnit>","description":"entity.PatientData.LengthUnit.entries","location":"patient-management-integration-microservice/entity/-patient-data/-length-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<PatientData.LengthUnit>","entity.PatientData.LengthUnit.entries"]},{"name":"val entries: EnumEntries<PatientData.MassUnit>","description":"entity.PatientData.MassUnit.entries","location":"patient-management-integration-microservice/entity/-patient-data/-mass-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<PatientData.MassUnit>","entity.PatientData.MassUnit.entries"]},{"name":"val height: Double","description":"application.presenter.api.model.PatientApiDto.height","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/height.html","searchKeys":["height","val height: Double","application.presenter.api.model.PatientApiDto.height"]},{"name":"val height: PatientData.Height","description":"entity.Patient.height","location":"patient-management-integration-microservice/entity/-patient/height.html","searchKeys":["height","val height: PatientData.Height","entity.Patient.height"]},{"name":"val name: String","description":"application.presenter.api.model.PatientApiDto.name","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.PatientApiDto.name"]},{"name":"val name: String","description":"entity.Patient.name","location":"patient-management-integration-microservice/entity/-patient/name.html","searchKeys":["name","val name: String","entity.Patient.name"]},{"name":"val surname: String","description":"application.presenter.api.model.PatientApiDto.surname","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/surname.html","searchKeys":["surname","val surname: String","application.presenter.api.model.PatientApiDto.surname"]},{"name":"val surname: String","description":"entity.Patient.surname","location":"patient-management-integration-microservice/entity/-patient/surname.html","searchKeys":["surname","val surname: String","entity.Patient.surname"]},{"name":"val taxCode: PatientData.TaxCode","description":"entity.Patient.taxCode","location":"patient-management-integration-microservice/entity/-patient/tax-code.html","searchKeys":["taxCode","val taxCode: PatientData.TaxCode","entity.Patient.taxCode"]},{"name":"val taxCode: String","description":"application.presenter.api.model.PatientApiDto.taxCode","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/tax-code.html","searchKeys":["taxCode","val taxCode: String","application.presenter.api.model.PatientApiDto.taxCode"]},{"name":"val unit: PatientData.LengthUnit","description":"entity.PatientData.Height.unit","location":"patient-management-integration-microservice/entity/-patient-data/-height/unit.html","searchKeys":["unit","val unit: PatientData.LengthUnit","entity.PatientData.Height.unit"]},{"name":"val unit: PatientData.MassUnit","description":"entity.PatientData.Weight.unit","location":"patient-management-integration-microservice/entity/-patient-data/-weight/unit.html","searchKeys":["unit","val unit: PatientData.MassUnit","entity.PatientData.Weight.unit"]},{"name":"val value: Double","description":"entity.PatientData.Height.value","location":"patient-management-integration-microservice/entity/-patient-data/-height/value.html","searchKeys":["value","val value: Double","entity.PatientData.Height.value"]},{"name":"val value: Double","description":"entity.PatientData.Weight.value","location":"patient-management-integration-microservice/entity/-patient-data/-weight/value.html","searchKeys":["value","val value: Double","entity.PatientData.Weight.value"]},{"name":"val weight: Double","description":"application.presenter.api.model.PatientApiDto.weight","location":"patient-management-integration-microservice/application.presenter.api.model/-patient-api-dto/weight.html","searchKeys":["weight","val weight: Double","application.presenter.api.model.PatientApiDto.weight"]},{"name":"val weight: PatientData.Weight","description":"entity.Patient.weight","location":"patient-management-integration-microservice/entity/-patient/weight.html","searchKeys":["weight","val weight: PatientData.Weight","entity.Patient.weight"]}]
